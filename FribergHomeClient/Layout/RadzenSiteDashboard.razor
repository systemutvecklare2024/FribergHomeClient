@inject IJSRuntime JS

@* //Author:Emelie *@
@* //Co-Author: Glate *@

<RadzenPanelMenu DisplayStyle="@(LargeSidebar ? MenuItemDisplayStyle.IconAndText : MenuItemDisplayStyle.Icon)" ShowArrow="false" Style="background-color: #54787e;">

	<RadzenRow AlignItems="AlignItems.End" JustifyContent="JustifyContent.End">
		@if (LargeSidebar && !SmallScreen)
		{
			<RadzenButton Icon="arrow_menu_close" Variant="Variant.Text" ButtonStyle="ButtonStyle.Secondary" Click="@(() => LargeSidebar = !LargeSidebar)" />
		}
		@if (!LargeSidebar && !SmallScreen)
		{
			<RadzenButton Icon="arrow_menu_open" Variant="Variant.Text" ButtonStyle="ButtonStyle.Secondary" Click="@(() => LargeSidebar = !LargeSidebar)" />
		}
	</RadzenRow>

	<RadzenStack Orientation="Orientation.Vertical" class="rz-p-2">
		<RadzenPanelMenuItem Text="Mina Objekt" Icon="home" Path="dashboard/myobjects" Click="@OnToggleSidebar" />
		<RadzenPanelMenuItem Text="Lägg till ny bostad" Icon="add_home" Path="/dashboard/addproperty" Click="@OnToggleSidebar" />
		<RadzenPanelMenuItem Text="Min Profil" Icon="account_circle" Path="/dashboard/myprofile" Click="@OnToggleSidebar" />
		<RadzenPanelMenuItem Text="Ändra Profil" Icon="edit" Path="/RealEstateAgents/UpdateProfile/My" Click="@OnToggleSidebar" />
		<RadzenPanelMenuItem Text="Mäklarbyrå" Icon="holiday_village" Path="/dashboard/agency" Click="@OnToggleSidebar" />
		<LogoutButton></LogoutButton>
	</RadzenStack>

</RadzenPanelMenu>

@code {
	[Parameter]
	public bool LargeSidebar { get; set; } = true;

	[Parameter]
	public EventCallback<bool> ToggleSidebar { get; set; }

	private bool SmallScreen => windowWidth < 769 ? true : false;

	//Author: Javascript-Glate
	private int windowWidth;
	protected override async Task OnInitializedAsync()
	{
		await JS.InvokeVoidAsync("listenForResize", DotNetObjectReference.Create(this));
		windowWidth = await JS.InvokeAsync<int>("getWindowWidth");
	}

	[JSInvokable]
	public void UpdateWidth(int width)
	{
		windowWidth = width;
		if(windowWidth < 769)
		{
			LargeSidebar = SmallScreen; //If window width < 769, force icons and text on sidebar.
		}
		StateHasChanged();
	}

	private async Task OnToggleSidebar() //if small screen (full screen sidebar), EventCallback bool to close sidebar on click.
	{
		if (SmallScreen)
		{
			await ToggleSidebar.InvokeAsync(SmallScreen);
		}
	}
}
