@using FribergHomeClient.Data
@using FribergHomeClient.Data.ViewModel
@using FribergHomeClient.Data.Dto
@using static FribergHomeClient.Data.PropertyTypes
@inject HttpClient Http

@if (property == null)
{
    <p>Loading...</p>
}
else
{
    <RadzenTemplateForm TItem="PropertyDTO" Data="@property" Submit="@(async args => await CreateProperty(args))">
        <ChildContent>
            <RadzenFieldset Text="Basic Info">
                <RadzenFormField Text="List Pris" Variant="Variant.Outlined">
                    <RadzenNumeric Name="ListingPrice" ShowUpDown="false"
                    TValue="decimal"
                    @bind-Value="@property.ListingPrice"
                    Placeholder="Listing Price"
                    InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "enter value" } })" />
                </RadzenFormField>
                <RadzenFormField Text="Boarea" Variant="Variant.Outlined">
                    <RadzenNumeric ShowUpDown="false"
                    TValue="decimal"
                    @bind-Value="@property.LivingSpace"
                    Placeholder="Boarea (m²)"
                    InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "enter value" } })" />
                </RadzenFormField>
                <RadzenFormField Text="Biarea" Variant="Variant.Outlined">
                    <RadzenNumeric ShowUpDown="false"
                    TValue="decimal"
                    @bind-Value="@property.SecondaryArea"
                    Placeholder="Biarea (m²)"
                    InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "enter value" } })" />
                </RadzenFormField>
                <RadzenFormField Text="Tomtarea" Variant="Variant.Outlined">
                    <RadzenNumeric ShowUpDown="false"
                    TValue="decimal"
                    @bind-Value="@property.LotSize"
                    Placeholder="Tomtarea (m²)"
                    InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "enter value" } })" />
                </RadzenFormField>

                <RadzenFormField Text="Månadskostnad" Variant="Variant.Outlined">
                    <RadzenNumeric ShowUpDown="false"
                    TValue="decimal"
                    @bind-Value="@property.MonthlyFee"
                    Placeholder="Månadskostnad"
                    InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "enter value" } })" />
                </RadzenFormField>
                <RadzenFormField Text="Driftkostnad" Variant="Variant.Outlined">
                    <RadzenNumeric ShowUpDown="false"
                    TValue="decimal"
                    @bind-Value="@property.OperationalCostPerYear"
                    Placeholder="Driftkostnad"
                    InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "enter value" } })" />
                </RadzenFormField>
                <RadzenFormField Text="Byggår" Variant="Variant.Outlined">
                    <RadzenNumeric ShowUpDown="false"
                    TValue="int"
                    @bind-Value="@property.YearBuilt"
                    Placeholder="Byggår"
                    InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "enter value" } })" />
                </RadzenFormField>
                <RadzenFormField Text="Antal rum" Variant="Variant.Outlined">
                    <RadzenNumeric ShowUpDown="false"
                    TValue="int"
                    @bind-Value="@property.NumberOfRooms"
                    Placeholder="Antal rum"
                    InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "enter value" } })" />
                </RadzenFormField>
                <RadzenFormField Text="Upplåtelseform" Variant="Variant.Outlined">
                    <RadzenDropDown TValue="PropertyType" @bind-Value="property.PropertyType"
                    Data="@propertyTypes">
                        <Template Context="option">
                            @GetLocalized((PropertyType)option)
                        </Template>
                    </RadzenDropDown>
                </RadzenFormField>
            </RadzenFieldset>

            <RadzenFieldset Text="Location">
                <RadzenFormField Text="Adress" Variant="Variant.Outlined">
                    <RadzenTextBox Name="Street" @bind-Value="property.Street" Placeholder="Street" Style="width:100%" />
                </RadzenFormField>
                <RadzenFormField Text="Ort" Variant="Variant.Outlined">
                    <RadzenTextBox Name="City" @bind-Value="property.City" Placeholder="City" Style="width:100%" />
                </RadzenFormField>
                <RadzenFormField Text="Postkod" Variant="Variant.Outlined">
                    <RadzenTextBox Name="PostalCode" @bind-Value="property.PostalCode" Placeholder="Postal Code" Style="width:100%" />
                </RadzenFormField>
                <RadzenFormField Text="Kommun" Variant="Variant.Outlined">
                    <RadzenNumeric Name="MuncipalityId" @bind-Value="property.MuncipalityId" Placeholder="Municipality ID" Style="width:100%" />
                </RadzenFormField>
            </RadzenFieldset>

            <RadzenFieldset Text="Images">
                <RadzenTextBox Placeholder="Add image URL..." @bind-Value="newImageUrl" Style="width:80%" />
                <RadzenButton Icon="add" Text="Add Image" Click="@(() => AddImageUrl())" Style="margin-left: 10px;" />

                <ul>
                    @foreach (var img in property.ImageUrls)
                    {
                        <li>@img.ImgURL</li>
                    }
                </ul>
            </RadzenFieldset>

            <RadzenFieldset Text="Description">
                <RadzenTextArea @bind-Value="property.Description" Placeholder="Property Description" Rows="5" Style="width:100%" />
            </RadzenFieldset>

            <RadzenButton ButtonType="ButtonType.Submit" Text="Create Property" Style="margin-top: 20px;" />
        </ChildContent>
    </RadzenTemplateForm>


    @code {
    private PropertyDTO property = new()
        {
            ImageUrls = new List<PropertyImageDTO>()
        };

    private IEnumerable<PropertyType> propertyTypes = Enum.GetValues<PropertyType>();

    private string? newImageUrl;

    private Variant variant = Variant.Outlined;

    async Task AddImageUrl()
    {
        if (!string.IsNullOrWhiteSpace(newImageUrl))
        {
            property.ImageUrls.Add(new PropertyImageDTO { ImgURL = newImageUrl });
            newImageUrl = string.Empty;
        }
    }

    private string GetLocalized(PropertyType option)
    {
        return PropertyTypes.GetLocalized(option);
    }

    async Task CreateProperty(PropertyDTO dto)
    {
        dto.ImageUrls = property.ImageUrls;
        var response = await Http.PostAsJsonAsync<PropertyDTO>("api/properties", dto);

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Success!");
            // NotificationService.Notify(NotificationSeverity.Success, "Property created");
            // Navigation.NavigateTo("/properties");
        }
        else
        {
            Console.WriteLine("Epic failure");
            // NotificationService.Notify(NotificationSeverity.Error, "Failed to create property");
        }
    }
    }
}