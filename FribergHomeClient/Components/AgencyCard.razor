@using static FribergHomeClient.Data.StatusTypes

@* Author: Tobias
CoAuthor: Emelie 
Styling: Fredrik *@

<RadzenCard Variant="Variant.Filled" style="width: 100%; max-width: 800px; padding 1rem; padding-right: var(--card-padding-right);" class="rz-my-12 rz-mx-auto">
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="2rem" class="rz-p-4">
        <RadzenImage Path="@LogoUrl" Style="width: 200px; height: 200px; border-radius: 50%;" />
        <RadzenStack Gap="0">
            <RadzenText TextStyle="TextStyle.Body1" style="max-width: 100%; font-size: clamp(1rem, 4vw, 1.5rem); padding-left: 3vw;"><b>@(Name)</b></RadzenText>
            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="font-size: clamp(0.8rem, 1.5vw, 1.2rem); padding-left: 3vw;">Presentation</RadzenText>
            <RadzenText TextStyle="TextStyle.Body1" Style="font-size: clamp(0.8rem, 1.5vw, 1.5rem); padding-left: 3vw;"><b>@Presentation</b></RadzenText>
        </RadzenStack>
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" class="rz-p-4">
        @if(pendingApplications != null && pendingApplications.Any())
        {
            <ListApplications Applications="@pendingApplications"/>
        }
    </RadzenStack>
</RadzenCard>


@code {
    [Parameter]
    public string? Name { get; set; }
    [Parameter]
    public string? Presentation { get; set; }
    [Parameter]
    public string? LogoUrl { get; set; }
    [Parameter]
    public List<ApplicationDTO> Applications { get; set; }

    private List<ApplicationDTO> pendingApplications = [];

    protected override void OnInitialized()
    {
        if(Applications != null && Applications.Any())
            SelectPendingApplications(Applications);
    }

    private void SelectPendingApplications(List<ApplicationDTO> applications)
    {
        pendingApplications = applications.Where(a => a.StatusType == StatusType.Pending).ToList();
        StateHasChanged();
    }

}
