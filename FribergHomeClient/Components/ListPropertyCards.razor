@using FribergHomeClient.Data.Dto
@inject HttpClient Http

@if (Properties == null)
{
	<p>Loading...</p>
}
else
{
	<RadzenRow Gap="0">
		<RadzenColumn SizeSM="12" SizeMD="6" OffsetMD="3">

			@foreach (var p in Properties)
			{
				p.Muncipality = Muncipalities.FirstOrDefault(m => m.Id == p.Id).Name;
				<PropertyCard Property="p"></PropertyCard>
			}
		</RadzenColumn>
	</RadzenRow>
}

@code {
	[Parameter]
	public int Take { get; set; } = 0; //number of listings to be fetched if specified.

	public List<PropertyDTO> Properties = new List<PropertyDTO>();
	public List<MuncipalityDTO> Muncipalities = new List<MuncipalityDTO>();

	protected override async Task OnInitializedAsync()
	{
		Muncipalities = await Http.GetFromJsonAsync<List<MuncipalityDTO>>("api/muncipality");

		if (Take == 0)
		{
			Properties = await Http.GetFromJsonAsync<List<PropertyDTO>>("api/Properties");
		}
		else
		{
			Properties = await Http.GetFromJsonAsync<List<PropertyDTO>>($"api/properties/latest?take={Take}");
		}
	}
}
