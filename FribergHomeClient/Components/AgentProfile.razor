@using FribergHomeClient.Components
@using FribergHomeClient.Data.Dto
@inject IRealEstateAgentService AgentService
@inject HttpClient Http
@inject NotificationService NotificationService
@inject NavigationManager navigationManager

@* Author: Tobias
CoAuthor: Emelie *@

@if (agent == null)
{
    <Spinner/>
}
else
{
    <RadzenCard class="rz-my-12 rz-mx-auto" Style="max-width: 420px">
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" class="rz-p-4">
            <RadzenImage Path="@agent?.ImageUrl" Style="width: 100px; height: 100px; border-radius: 50%;" />
            <RadzenStack Gap="0">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Namn</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@(agent?.FirstName + " " + agent?.LastName)</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Mäklarbyrå</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@agent?.Agency?.Name</b></RadzenText>
            </RadzenStack>
        </RadzenStack>
        <RadzenCard class="rz-background-color-primary-light rz-shadow-0 rz-border-radius-0 rz-p-8" style="margin: 1rem calc(-1 * var(--rz-card-padding));">
            <RadzenText TextStyle="TextStyle.H6" class="rz-color-on-primary-light"><strong>Kontaktuppgifter</strong></RadzenText>
            <RadzenRow RowGap="0">
                <RadzenColumn SizeSM="4">
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">E-postadress</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@(agent?.Email)</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Telefonnummer</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@(agent?.PhoneNumber)</b></RadzenText>
                </RadzenColumn>
             </RadzenRow>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.End" Gap="1rem" Wrap="FlexWrap.Wrap">
                <RadzenButton Click="NavigateTo" Text="Uppdatera Profil" ButtonStyle="ButtonStyle.Base" />
            </RadzenStack>
        </RadzenCard>
    </RadzenCard>

    
}


@code {
    [Parameter]
    public int? Id { get; set; }
    RealEstateAgentDTO? agent { get; set; }
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Need to handle 404s
        if(!Id.HasValue)
        {
            errorMessage = "Misslyckades att hämta mäklare, försök igen";
            NotifyError(errorMessage);
            return;
        }
        var response = await AgentService.GetById(Id.Value);
        if (!response.Success || response.Data == null)
        {
            errorMessage = "Misslyckades att hämta mäklare, försök igen";
            NotifyError(errorMessage);
            return;
        }
        agent = response.Data;
    }
    void NavigateTo()
    {
        navigationManager.NavigateTo("/RealEstateAgents/UpdateProfile/My");
    }

    private void NotifyError(string errorMessage)
    {
        NotificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Duration = 5000,
                Summary = "Fel uppstod",
                Detail = errorMessage
            });
    }

}