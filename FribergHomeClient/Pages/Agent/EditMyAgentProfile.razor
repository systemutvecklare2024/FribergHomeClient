@page "/RealEstateAgents/UpdateProfile/My"
@using Blazored.LocalStorage
@using FribergHomeClient.Components
@inject HttpClient Http
@inject NotificationService NotificationService
@inject ILocalStorageService LocalStorage
@inject NavigationManager navigationManager

@if (agentId.HasValue)
{
    <UpdateAgentProfile Property="@agent" OnSubmit="@UpdateAgentProfileCallback" SubmitButtonText="Uppdatera"></UpdateAgentProfile>
}
else
{
    <Spinner/>
}  


@code {
    private int? agentId;

    private UpdateAgentDTO agent;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        agentId = await LocalStorage.GetItemAsync<int>("AgentId");
    }
    async Task UpdateAgentProfileCallback(UpdateAgentDTO dto)
    {
        if (!agentId.HasValue)
        {
            NotificationService.Notify(NotificationSeverity.Error, "Ej angiven profil");
            navigationManager.NavigateTo("/RealEstateAgents/UpdateProfilee/My");
        }

        var response = await Http.PutAsJsonAsync<UpdateAgentDTO>($"api/RealEstateAgents/My", dto);

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Success!");
            NotificationService.Notify(NotificationSeverity.Success, "Profil uppdaterad'");
            navigationManager.NavigateTo("/RealEstateAgents/UpdateProfile/My");
        }
        else
        {
            Console.WriteLine("Epic failure");
            NotificationService.Notify(NotificationSeverity.Error, "Misslyckades att uppdatera din profil, försök igen");
        }
    }
}
