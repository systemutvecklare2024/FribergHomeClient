@page "/login"
@inject IAuthenticationService AuthService
@inject NavigationManager NavManager
@using FribergHomeClient.Data.Dto
@inject NotificationService NotificationService

@* Author: Emelie *@
@* CoAuthor: Christoffer *@

<PageTitle>Logga in</PageTitle>

<Panel Title="Logga in">
    <RadzenTemplateForm Data=@model Submit="@((LoginDTO args) => OnLogin(args))">
        <RadzenStack class="rz-mb-3" Gap="0.5rem" >
            <RadzenLabel Text="E-post" />
            <RadzenTextBox @bind-Value="@model.Email" Name="Email" />
            <RadzenEmailValidator Component="Email" Text="Ogiltig E-post" />
            <RadzenRequiredValidator Component="Email" Text="E-post krävs" />
        </RadzenStack>

        <RadzenStack class="rz-mb-3" Gap="0.5rem">
            <RadzenLabel Text="Lösenord" />
            <RadzenPassword @bind-Value="@model.Password" Name="Password" Style="width:100%;" />
            <RadzenRequiredValidator Component="Password" Text="Lösenord krävs" />
        </RadzenStack>


        <RadzenRow class="rz-mt-4">
            <RadzenColumn Size="12" SizeMD="6">
                <RadzenButton Text="Logga in" ButtonType="ButtonType.Submit" Style="width: 100%;" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="6">
                <RadzenButton ButtonStyle="ButtonStyle.Light" Style="width: 100%;" Text="Registrera konto" Click="@OnRegister" />
            </RadzenColumn>
        </RadzenRow>


    </RadzenTemplateForm>
</Panel>

@code {

    private LoginDTO model = new();
    //private bool failed = false;
    private string errorMessage = string.Empty;

    public async Task OnLogin(LoginDTO loginDTO)
    {
        if (!await AuthService.AuthenticateAsync(model))
        {
            //failed = true;
            errorMessage = "Något gick fel vid inloggningen!";
            NotifyError(errorMessage);
        }
        else
        {
            NavManager.NavigateTo("/dashboard/myobjects");
        }

    }

    public void OnRegister()
    {
        NavManager.NavigateTo("/register");
    }

    private void NotifyError(string errorMessage)
    {
        NotificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Duration = 5000,
                Summary = "Fel uppstod",
                Detail = errorMessage
            });
    }
}