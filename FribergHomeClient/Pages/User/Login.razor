@page "/login"
@inject IAuthenticationService AuthService
@inject NavigationManager NavManager
@using FribergHomeClient.Data.Dto

@* //Author:Emelie *@

<RadzenTemplateForm Data=@model Submit="@((LoginDTO args) => OnLogin(args))">
    @if (failed && !string.IsNullOrEmpty(errorMessage))
    {
        <RadzenAlert Style="AlertStyle.Danger">
            @errorMessage
        </RadzenAlert>
    }
    <RadzenRow Gap="2rem" class="rz-p-0 rz-p-lg-4">
        <RadzenColumn Size="12" SizeMD="3">
            <RadzenLabel Text="E-post" />
            <RadzenTextBox @bind-Value="@model.Email" Name="Email" Style="width:100%" />
            <RadzenColumn Size="12" SizeMD="3">
                <RadzenEmailValidator Component="Email" Text="Ogiltig E-post" />
                <RadzenRequiredValidator Component="Email" Text="E-post krävs" />
            </RadzenColumn>
            <RadzenLabel Text="Lösenord" />
            <RadzenPassword @bind-Value="@model.Password" Name="Password" Style="width:100%" />
            <RadzenColumn Size="12" SizeMD="3">
                <RadzenRequiredValidator Component="Password" Text="Lösenord krävs" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="3">
                <RadzenButton Text="Logga in" ButtonType="ButtonType.Submit" Style="margin-top:10px; margin-right:10px" />
                <RadzenButton ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" Text="Registrera konto" Click="@OnRegister" />
            </RadzenColumn>
        </RadzenColumn>
    </RadzenRow>
</RadzenTemplateForm>



@code {

    private LoginDTO model = new();
    private bool failed = false;
    private string errorMessage = string.Empty;

    public async Task OnLogin(LoginDTO loginDTO)
    {
        if (!await AuthService.AuthenticateAsync(model))
        {
            failed = true;
            errorMessage = "Något gick fel vid inloggningen!";

        }
        else
        {
            NavManager.NavigateTo("/dashboard");
        }

    }

    public void OnRegister()
    {
        NavManager.NavigateTo("/register");

    }
}